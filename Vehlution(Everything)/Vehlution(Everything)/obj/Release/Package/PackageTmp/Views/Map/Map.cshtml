
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>
    <style>
        /* Set the size of the div element that contains the map */
        #map {
            height: 400px; /* The height is 400 pixels */
            width: 100%; /* The width is the width of the web page */
        }
    </style>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCUKBWbhWeA_a89u7Kqjav_MBSMKx8sDuo&callback=initMap"></script>
    <link href="~/CSS1/StyleSheet1.css" rel="stylesheet" />
</head>
<body>

    <div id="map"></div>

    <div id="directions">

        <h3>Directions</h3>

    </div>

    <div class="search_block">

        <input type="text" name="address" id="address" class="address" placeholder="Where are you coming from?" value="" />

    </div>

    <div class="search_block">

        <select name="travel_mode" id="mode">
            <option>DRIVING</option>
            <option>WALKING</option>
            <option>BICYCLE</option>
            <option>TRANSIT</option>
        </select>

    </div>

    <div class="search_block">

        <button  title="Get directions to us!" id="search_button" onclick="">Search</button><br />

    </div><br />

    <input title="Return to homepage" type="button" value="Home" class="btn btn-secondary" onclick="location.href='@Url.Action("ContactUs","ContactAbout")'" />
    <script>
        setTimeout(function () {
            google.maps.event.addDomListener(window, "load", initMap);
        }, 1000);
        var geocoder;
        var map;
        var search_lat;
        var search_lng;
        var directionsDisplay;
        var directionsService;
        var myLatLng = {
            lat: -25.876170, lng: 28.103720
        };
        function initMap() {



            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 16,
                center: myLatLng,
            });
            directionsDisplay = new google.maps.DirectionsRenderer;
            directionsService = new google.maps.DirectionsService;


            geocoder = new google.maps.Geocoder();

            document.getElementById('search_button').addEventListener('click', function () {
                getDirectionsByAddress(geocoder, map);
            });

            var locations = []; //<?php echo json_encode($locations_array); ?>;

            var infowindow = new google.maps.InfoWindow();

            var marker, i;

            for (i = 0; i < locations.length; i++) {

                marker = new google.maps.Marker({
                    position: new google.maps.LatLng(locations[i][5], locations[i][6]),
                    animation: google.maps.Animation.DROP,
                    icon: icon_image,
                    map: map
                });
            }

        }

        function getDirectionsByAddress() {

            // GET THE SEARCH ADDRESS

            var address = document.getElementById('address').value;
            console.log('search address: ' + address);

            geocoder.geocode({
                'address': address
            }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    search_lat = results[0].geometry.location.lat();
                    search_lng = results[0].geometry.location.lng();
                    console.log('search address coordinates: ' + search_lat + ', ' + search_lng);
                    calculateAndDisplayRoute(directionsService, directionsDisplay);
                } else {
                    alert("Geocode was not successful for the following reason: " + status);
                }
            });

            // INITIALIZE GOOGLE MAPS DIRECTIONS SERVICE

            directionsDisplay.setMap(map);
            directionsDisplay.setPanel(document.getElementById('directions'));



            // CHECK THE MODE OF TRAVEL

            document.getElementById('mode').addEventListener('change', function () {
                calculateAndDisplayRoute(directionsService, directionsDisplay);
            });

            // CALCULATE THE DIRECTIONS BASED ON ADDRESS ENTERED AND MODE OF TRAVEL

            function calculateAndDisplayRoute(directionsService, directionsDisplay) {
                console.log('search address coordinates: ' + search_lat + ', ' + search_lng);
                var selectedMode = document.getElementById('mode').value;
                directionsService.route({
                    origin: {
                        lat: search_lat,
                        lng: search_lng
                    },
                    destination: myLatLng,
                    travelMode: google.maps.TravelMode[selectedMode]
                }, function (response, status) {
                    if (status == google.maps.DirectionsStatus.OK) {
                        directionsDisplay.setDirections(response);
                    } else {
                        window.alert('Directions request failed due to ' + status);
                    }
                });
            }
        }
    </script>


    @*<script>
            function getAddress() {
                console.log('wor')
            }
            // Initialize and add the map
            var map = null;
            var directionsDisplay;
            var directionsService = null;
            function initMap() {
                directionsService = new google.maps.DirectionsService();
                directionsDisplay = new google.maps.DirectionsRenderer();
                // The location of Uluru
                var uluru = {
                    lat: -25.876170, lng: 28.103720
                };
                // The map, centered at Uluru
                map = new google.maps.Map(document.getElementById('map'), { zoom: 4, center: uluru });
                // The marker, positioned at Uluru
                var marker = new google.maps.Marker({ position: uluru, map: map });

            }
            function calcRoute() {

                var geocoder = new google.maps.Geocoder();
                var address = document.getElementById("txtAddress").value;

                geocoder.geocode({ 'address': address }, function (results, status) {

                    if (status == google.maps.GeocoderStatus.OK) {
                        var latitude = results[0].geometry.location.lat();
                        var longitude = results[0].geometry.location.lng();

                        var start = new google.maps.LatLng(latitude, longitude);
                        var end = new google.maps.LatLng(-25.876170, 28.103720);
                        var bounds = new google.maps.LatLngBounds();
                        bounds.extend(start);
                        bounds.extend(end);
                        map.fitBounds(bounds);
                        var request = {
                            origin: start,
                            destination: end,
                            //travelMode: google.maps.TravelMode.DRIVING
                            travelMode: 'DRIVING',
                            unitSystem: google.maps.UnitSystem.IMPERIAL
                        };
                        directionsService.route(request, function (response, status) {
                            if (status == google.maps.DirectionsStatus.OK) {

                                getRouteJSON({ lat: latitude, lng: longitude }, { lat: -25.876170, lng: 28.103720 });
                                directionsDisplay.setDirections(response);
                                directionsDisplay.setMap(map);
                            } else {
                                alert("Directions Request from " + start.toUrlValue(6) + " to " + end.toUrlValue(6) + " failed: " + status);
                            }
                        });
                    }
                });
            }

            function getRouteJSON(origin, destination) {
                const service = new google.maps.DistanceMatrixService();
                service.getDistanceMatrix(
                    {
                        origins: [origin],
                        destinations: [destination],
                        travelMode: google.maps.TravelMode.DRIVING,
                        unitSystem: google.maps.UnitSystem.METRIC,
                        avoidHighways: false,
                        avoidTolls: false,
                    },
                    (response, status) => {
                        console.log(response);
                    });
            }
        </script>*@
    <!--Load the API from the specified URL
    * The async attribute allows the browser to render the page while the API loads
    * The key parameter will contain your own API key (which is not needed for this tutorial)
    * The callback parameter executes the initMap() function
    -->


</body>
</html>